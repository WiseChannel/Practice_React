{"version":3,"sources":["components/FakeAPI/fakeMovieService.js","components/Movies/getMovies.js","components/Movies/movies.js","App.js","serviceWorker.js","index.js"],"names":["movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","liked","getMovie","Movies","state","handleDelete","movie","filter","m","setState","count","this","length","Fragment","className","map","key","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sNACaA,G,MAAS,CACpB,CACEC,IAAK,2BACLC,MAAO,aACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,UAChDC,cAAe,EACfC,gBAAiB,IACjBC,YAAa,2BACbC,OAAO,GAET,CACEP,IAAK,2BACLC,MAAO,WACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,UAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,UACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,YAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,gBACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,UAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,WACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,UAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,mBACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,UAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,YACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,YAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,kBACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,YAChDC,cAAe,EACfC,gBAAiB,KAEnB,CACEL,IAAK,2BACLC,MAAO,eACPC,MAAO,CAAEF,IAAK,2BAA4BG,KAAM,UAChDC,cAAe,EACfC,gBAAiB,OC/DRG,EAAW,WACpB,OAAOT,GCEUU,E,2MACjBC,MAAQ,CACJX,OAAQS,K,EAGZG,aAAe,SAACC,GACZ,IAAMb,EAAS,EAAKW,MAAMX,OAAOc,QAAO,SAAAC,GAAC,OAAIA,EAAEd,MAAQY,EAAMZ,OAC7D,EAAKe,SAAS,CAAEhB,OAAQA,K,wEAGlB,IAAD,OACUiB,EAASC,KAAKP,MAAMX,OAA5BmB,OAEP,OAAc,IAAVF,EAAqB,6CAGrB,kBAAC,IAAMG,SAAP,KACI,yBAAKC,UAAU,aACX,oCAAS,2BAAIJ,GAAb,2BAEA,2BAAOI,UAAU,SACb,+BACA,4BACI,qCACA,qCACA,sCAGJ,+BACEH,KAAKP,MAAMX,OAAOsB,KAAI,SAAAT,GAAK,OACzB,wBAAIU,IAAKV,EAAMZ,KACX,4BAAKY,EAAMX,OACX,4BAAKW,EAAMV,MAAMC,MACjB,4BAAKS,EAAMR,eACX,4BACI,4BAAQmB,QAAS,kBAAM,EAAKZ,aAAaC,IAAQQ,UAAU,yBAA3D,uB,GAnCAI,IAAMC,WCK3BC,MARf,WACE,OACE,yBAAKN,UAAU,OACX,kBAAC,EAAD,QCOYO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b650bdc5.chunk.js","sourcesContent":["\nexport const movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\n// export function getMovies() {\n//   return movies;\n// }\n//\n// export function getMovie(id) {\n//   return movies.find(m => m._id === id);\n// }\n//\n// export function saveMovie(movie) {\n//   let movieInDb = movies.find(m => m._id === movie._id) || {};\n//   movieInDb.name = movie.name;\n//   movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n//   movieInDb.numberInStock = movie.numberInStock;\n//   movieInDb.dailyRentalRate = movie.dailyRentalRate;\n//\n//   if (!movieInDb._id) {\n//     movieInDb._id = Date.now();\n//     movies.push(movieInDb);\n//   }\n//\n//   return movieInDb;\n// }\n//\n// export function deleteMovie(id) {\n//   let movieInDb = movies.find(m => m._id === id);\n//   movies.splice(movies.indexOf(movieInDb), 1);\n//   return movieInDb;\n// }\n","import {movies} from \"../FakeAPI/fakeMovieService\";\n\nexport const getMovie = () => {\n    return movies\n}\n\nexport const getMovies = (id) => {\n    return movies.find(m => m._id === id)\n}","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { getMovies, getMovie } from \"./getMovies\";\n\n\nexport default class Movies extends React.Component {\n    state = {\n        movies: getMovie()\n    }\n\n    handleDelete = (movie) => {\n        const movies = this.state.movies.filter(m => m._id !== movie._id)\n        this.setState({ movies: movies })\n    }\n\n    render() {\n        const {length: count} = this.state.movies\n\n        if (count === 0 ) return <p>No more videos</p>\n\n        return(\n            <React.Fragment>\n                <div className='container'>\n                    <h2>Show <b>{count}</b> movies in the database</h2>\n\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th>User:</th>\n                            <th>Title</th>\n                            <th>Data</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        { this.state.movies.map(movie => (\n                            <tr key={movie._id}>\n                                <td>{movie.title}</td>\n                                <td>{movie.genre.name}</td>\n                                <td>{movie.numberInStock}</td>\n                                <td>\n                                    <button onClick={() => this.handleDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            </React.Fragment>\n        )\n    }\n}","import React from 'react';\nimport Movies from \"./components/Movies/movies\";\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Movies/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}